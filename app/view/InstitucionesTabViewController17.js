/*
 * File: app/view/InstitucionesTabViewController17.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cartera.view.InstitucionesTabViewController17', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.alumnostab',

    onTextfieldChange: function(field, newValue, oldValue, eOpts) {
        var busqueda = Ext.getCmp('txtBuscarAlumnoC').getValue().toUpperCase();

        if(newValue === ''){

            Ext.getStore('BusAlumnoStore').clearFilter();

        }else {
            Ext.getStore('BusAlumnoStore').clearFilter();
            Ext.getStore('BusAlumnoStore').filter({
                filterFn: function(f) {
                    return f.get('ap_paterno').indexOf(busqueda) > -1;
                }
            });
        }
    },

    onTextfieldKeypress: function(textfield, e, eOpts) {
        var busqueda = Ext.getCmp('txtBuscarAlumnoC').getValue().toUpperCase();

        if(newValue === ''){

            Ext.getStore('BusAlumnoStore').clearFilter();

        }else {
            Ext.getStore('BusAlumnoStore').clearFilter();
            Ext.getStore('BusAlumnoStore').filter({
                filterFn: function(f) {
                    return f.get('ap_paterno').indexOf(busqueda) > -1;
                }
            });
        }
    },

    onGridcolumnAfterRender: function(component, eOpts) {
        Ext.getStore('BusAlumnoStore').load({
            params:{
                'id_institucion': Ext._id_institucion
            },
        });

    },

    onGridAlumosCCellDblClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
        alert('AlumnosTab');
        Ext._id_alumno=0;
        Ext.getCmp('CobrosForm').getForm().reset();
        Ext.getCmp('CobroFForm').getForm().reset();



        Ext.getStore('CobrosAlumnoStore').load({
            params:{
                'matricula': record.data.matricula_nueva

            },
            callback: function(records) {
                if (records.length > 0) {
                    var datos= records[0].data;
                    Ext.getCmp('txtAlumnoA').setValue(datos.nombre);
                    Ext.getCmp('txtNivelA').setValue(datos.nivel);
                    Ext.getCmp('txtGradoA').setValue(datos.grado);
                    Ext.getCmp('txtGrupoA').setValue(datos.grupo);
                    Ext.getCmp('txtMatriculaA').setValue(record.data.matricula_nueva);
                    Ext.getCmp('txtId_alumnoA').setValue(datos.id_alumno);
                    Ext.getCmp('cmbRFCF').setValue(datos.rfc);
                    Ext.getCmp('txtRazonSocialF').setValue(datos.razon_social);
                    Ext.getCmp('txtUsoCFDIF').setValue(datos.usoCFDI);
                    Ext.getCmp('txtIdDatoFac').setValue(datos.id_dato_facturacion);
                    Ext._id_alumno=datos.id_alumno;


                }

                Ext.getStore('cmbRFCStore').load({
                    params:{
                        'id_alumno': Ext._id_alumno,
                    }
                });


                Ext.getStore('cmbTipoMovimientoStore').load({
                    params:{
                        'id_ins': Ext._id_institucion,

                    }
                });
            }
        });

        Ext.getCmp('AlumnosTab').destroy();
    }

});
