/*
 * File: app/view/InstitucionesWinViewController20.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cartera.view.InstitucionesWinViewController20', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.anualidadeswin',

    onTxtMatriculaASpecialkey: function(field, e, eOpts) {
        var matricula = Ext.getCmp('txtMatriculaAnu').getValue();

        if (e.getKey() == e.ENTER) {
            Ext._id_alumno=0;
            Ext.getCmp('AnualidadesForm').getForm().reset();
            Ext.getCmp('AnualidadesForm').getForm().reset();

            Ext.getStore('CobrosAlumnoStore').load({
                params:{
                    'matricula': matricula
                },
                callback: function(records) {
                    if (records.length > 0) {
                        var datos= records[0].data;
                        Ext.getCmp('txtAlumnoAnu').setValue(datos.nombre);
                        Ext.getCmp('txtId_alumnoAnu').setValue(datos.id_alumno);
                        Ext.getCmp('txtNivelAnu').setValue(datos.nivel);
                        Ext.getCmp('txtMatriculaAnu').setValue(datos.matricula);
                        Ext.getCmp('txtGradoAnu').setValue(datos.grado);
                        Ext.getCmp('txtGrupoAnu').setValue(datos.grupo);
                        Ext.getCmp('cmbRFCAnu').setValue(datos.rfc);
                        Ext.getCmp('txtReferenciaAnu').setValue(datos.referencia);
                        Ext.getCmp('cmbTipoAnu').setValue("COLEGIATURA");
                        Ext.getCmp('txtRazonSocialAnu').setValue(datos.razon_social);
                        Ext.getCmp('txtUsoCFDIAnu').setValue(datos.usoCFDI);
                        Ext.getCmp('txtIdDatoFacAnu').setValue(datos.id_dato_facturacion);
                        Ext._id_alumno=datos.id_alumno;
                        Ext.getCmp('txtCicloEscolar').setValue(Ext._id_ciclo_escolar);



                    }


                    Ext.getStore('cmbRFCStore').load({
                        params:{
                            'id_alumno': Ext._id_alumno
                        },
                        callback: function(records) {
                            if (records.length <= 0) {
                                Ext.getCmp('cmbRFCAnu').setValue('XAXX010101000');
                                Ext.getCmp('txtRazonSocialAnu').setValue(Ext.getCmp('txtAlumnoAnu').getValue());
                                Ext.getCmp('txtUsoCFDIAnu').setValue("D10");
                                Ext.getCmp('txtIdDatoFacAnu').setValue("0");

                            }

                        }

                    });

                    Ext.getStore('MesesAnualidadStore').load({
                        params:{
                            'id_institucion': Ext._id_institucion,
                            'id_ciclo_escolar': Ext._id_ciclo_escolar,
                            'id_alumno': Ext._id_alumno

                        }
                    });



                    Ext.getStore('ImportesAnualidadStore').load({
                        params:{
                            'id_ciclo_escolar': Ext._id_ciclo_escolar,
                            'id_alumno': Ext._id_alumno,

                        },

                        callback: function(records) {
                            if (records.length >= 0) {
                                var importe=records[0].data;
                                Ext.getCmp('txtImporteAnu').setValue(importe.cuota);
                                Ext.getCmp('txtDescuentoBecaAnu').setValue(importe.beca);
                                Ext.getCmp('txtTransporteAnu').setValue(importe.transporte);
                                Ext.getCmp('txtSubtotalAnu').setValue(importe.subtotal);
                                Ext.getCmp('txtDescuentoAnu').setValue(importe.descuento);
                                Ext.getCmp('txtSaldoAnu').setValue(importe.importe);

                            }
                        }

                    });

                }




            });



        }


    },

    onbtnGuardarCobro1: function(button, e, eOpts) {

        var AlumnosWin = Ext.create('cartera.view.AlumnosAnualidadTab');
        AlumnosWin.show();


    },

    onCmbRFCFChange: function(field, newValue, oldValue, eOpts) {

        if(Ext._id_alumno>=1){
            datos = field.lastSelectedRecords[0].data;
            Ext.getCmp('txtRazonSocialAnu').setValue(datos.razon_social);
            Ext.getCmp('txtUsoCFDIAnu').setValue(datos.usoCFDI);
        }


    },

    onCmbFormaPagoAnuChange: function(field, newValue, oldValue, eOpts) {


    },

    onTxtDescuentoCoSpecialkey: function(field, e, eOpts) {
        if (e.getKey() == e.ENTER) {
            var descuento=parseInt(Ext.getCmp('txtDescuentoCo').getValue());
            var importe=parseInt(Ext.getCmp('txtSubtotalCo').getValue());
            var recargos=parseInt(Ext.getCmp('txtRecargoCo').getValue());
            var total=importe+recargos-descuento;
            Ext.getCmp('txtSaldoCo').setValue(total + '.00');
        }
    },

    onTxtDescuentoCoFocusleave: function(component, event, eOpts) {
        var descuento=parseInt(Ext.getCmp('txtDescuentoCo').getValue());
        var importe=parseInt(Ext.getCmp('txtSubtotalCo').getValue());
        var recargos=parseInt(Ext.getCmp('txtRecargoCo').getValue());
        var total=importe+recargos-descuento;
        Ext.getCmp('txtSaldoCo').setValue(total + '.00');
    },

    onbtnGuardarCobro: function(button, e, eOpts) {
        Ext.getCmp("AnualidadesTab").setLoading("Realizando Factura, espere un momento...");
        if(Ext.getCmp('txtSaldoAnu').getValue()>1){


            if(Ext.getCmp('chckFacturaAnu').getValue()===true){
                Ext.getCmp('id_facturacion_transporteAnu').setValue("2");
            }else{
                Ext.getCmp('id_facturacion_transporteAnu').setValue("1");
            }

            Ext.getCmp('id_institucion_anualidad').setValue(Ext._id_institucion);

            var win = button.up('window'),
                form   = Ext.getCmp('CobroAForm'),
                record = form.getRecord(),
                values = form.getValues();


            if(Ext.getCmp('txtRazonSocialAnu').getValue()===""){
                //Si el formulario no es válido
                Ext.MessageBox.show({
                    title : 'Atencion',
                    buttons : Ext.MessageBox.OK,
                    msg : 'Seleccione un RFC',
                    icon : Ext.Msg.ERROR
                });
            }else{
                if(form.isValid()){
                    record = Ext.create('cartera.model.AnualidadModel');
                    record.set(values);


                    form.submit({
                        params: Ext.JSON.encode(values),
                        url: 'api/anualidad/create',
                        waitMsg: 'Procesando información...',
                        success: function() {


                            //  alert(values);

                            // INICIA BLOQUE DE FACTURACIÓN PARA ANUALIDADES
                            if(Ext.getCmp('chckFacturaAnu').getValue()===true && Ext.getCmp('txtTransporteAnu').getValue()>1){

                                Ext.getStore('FacturacionAnualidadTransporteStore').load();


                            }else{
                                // alert();


                                Ext.getStore('FacturacionAnualidadStore').load({
                                    callback: function(records, operation, success) {
                                        alert(success);
                                        if(success){
                                            var response = Ext.JSON.decode(operation.getResponse().responseText),
                                                mensaje = '<div style="text-align: center;">';
                                            mensaje += response.message + "<br>";

                                            //console.log();
                                            var ruta_xml = records[0].data.data.url_xml,
                                                ruta_pdf = records[0].data.data.url_pdf;
                                            alert(ruta_xml);
                                            alert(ruta_pdf);

                                            if(ruta_xml !== "" && ruta_pdf !== ""){
                                                mensaje += 'Puede descargar los archivos dando click en los enlaces siguientes:';
                                                mensaje += '<br><br>';
                                                mensaje += '<a href="' + ruta_xml + '/1" target="_blank"><img src="resources/images/xml.png" height="64" width="64" title="Descargar XML"></a>';
                                                mensaje += '<a href="' + ruta_pdf + '/1" target="_blank"><img src="resources/images/pdf.png" height="64" width="64" title="Descargar PDF"></a>';
                                                mensaje += '<br><br>';
                                                mensaje += '¿Desea generar otro comprobante?';
                                                btn = Ext.Msg.YESNO;
                                                btnText = {yes: 'Sí', no: 'No'};
                                                cerrar = true;
                                            } else {
                                                btn = Ext.Msg.OK;
                                                btnText = {ok: "Aceptar"};
                                                cerrar = false;
                                            }

                                            mensaje += '</div>';


                                            Ext.getCmp("AnualidadesTab").setLoading(false);

                                            Ext.MessageBox.show({
                                                title : 'Atencion',
                                                buttons : Ext.MessageBox.OK,
                                                msg : mensaje,//'Factura timbrada con éxito',
                                                icon : Ext.Msg.INFO
                                            });






                                        }else{
                                            Ext.getCmp("AnualidadesTab").setLoading(false);

                                            Ext.MessageBox.show({
                                                title : 'Atencion',
                                                buttons : Ext.MessageBox.OK,
                                                msg : 'No se ha timbrado la factura',
                                                icon : Ext.Msg.ERROR
                                            });

                                        }
                                    }


                                });


                            }


                            // TERMINA BLOQUE DE FACTURACIÓN PARA ANUALIDADES



                            /*   Ext.MessageBox.show({
                            title : 'Información',
                            buttons : Ext.MessageBox.OK,
                            msg : 'La Anualidad ha sido agregada.',
                            icon : Ext.Msg.INFO

                            }); */

                            Ext.getStore('AnualidadStore').load({
                                params:{
                                    'id_institucion': Ext._id_institucion,
                                    'id_ciclo_escolar': Ext._id_ciclo_escolar,
                                    'id_alumno':  Ext._id_alumno
                                },
                            });

                            win.close();

                        },
                        failure: function() {
                            console.log('FAILE CAPTURA ANUALIDAD');
                        }
                    });



                }else{
                    Ext.MessageBox.show({
                        title : 'Atencion',
                        buttons : Ext.MessageBox.OK,
                        msg : 'Ingrese todos los datos.',
                        icon : Ext.Msg.ERROR
                    });
                    Ext.getCmp("AnualidadesWin").setLoading(false);
                }



            }
        }else{
            if(Ext.getCmp('txtAlumnoAnu').getValue()===""){
                Ext.MessageBox.show({
                    title : 'Atencion',
                    buttons : Ext.MessageBox.OK,
                    msg : 'El alumno no ha sido seleccionado.',
                    icon : Ext.Msg.ERROR
                });

            }else{
                Ext.MessageBox.show({
                    title : 'Atencion',
                    buttons : Ext.MessageBox.OK,
                    msg : 'El alumno seleccionado no tiene canets pendientes de pago..',
                    icon : Ext.Msg.ERROR
                });
            }


        }
    },

    onbtnCancelarCobro: function(button, e, eOpts) {
        button.up('window').close();
    },

    onWinGen1AfterRender: function(component, eOpts) {

        Ext.getStore('MesesAnualidadStore').load({
            params:{
                'id_institucion': Ext._id_institucion,
                'id_ciclo_escolar': Ext._id_ciclo_escolar,
                'id_alumno': 0
            }
        });

    }

});
