/*
 * File: app/view/InstitucionesWinViewController8.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cartera.view.InstitucionesWinViewController8', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.datosfactwin',

    onTxtRfcDFChange: function(field, newValue, oldValue, eOpts) {
        field.setValue(newValue.toUpperCase());
    },

    onTxtRfcDFBlur: function(component, event, eOpts) {
        if(component.getValue() !== ""){
            if(!component.getValue().match(/^[A-Za-z]{3,4}([0-9]{2})(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])((\d|[A-Z]){3})$/)) {
            // Ext.getCmp('txtRfcDF').focus();
            // Ext.MessageBox.alert('Mensaje del sistema.', 'El RFC <b>"'+component.getValue()+'"</b> es inválido.');
            // Ext.getCmp('txtRfcDF').setValue('');
            Ext.MessageBox.show({
                title:'Mensaje del Sistema',
                buttons : Ext.MessageBox.OK,
                msg: 'El RFC <b>"'+component.getValue()+'"</b> es inválido.',
                icon: Ext.Msg.INFO,
                fn: function(btn){
                    if(btn === 'ok'){
                        Ext.getCmp('txtRfcDF').focus();
                        //win.close();

                    }
                }
            });

        }
    }
    },

    onAfiliacionBChange1: function(field, newValue, oldValue, eOpts) {
        field.setValue(newValue.toUpperCase());
    },

    onCmdUsocfdiDFChange: function(field, newValue, oldValue, eOpts) {
        var lengthRecord = field.lastSelectedRecords;
        // form = Ext.getCmp('formUsoCFDI'),
        // formCmb = Ext.getCmp('comboForm');
        var clave = field.lastSelectedRecords[0].data.clave;
        var tipo_persona = field.lastSelectedRecords[0].data.tipo_persona;
        console.log(tipo_persona);
        if(lengthRecord !== null){
            Ext.getCmp('txtClaveCFDIDF').setValue(clave);
            Ext.getCmp('txtTipoPersonaDF').setValue(tipo_persona);
        }

    },

    onTxtCalleChange: function(field, newValue, oldValue, eOpts) {
        field.setValue(newValue.toUpperCase());
    },

    onTxtNInteriorChange: function(field, newValue, oldValue, eOpts) {
        field.setValue(newValue.toUpperCase());
    },

    onAfiliacionBChange2: function(field, newValue, oldValue, eOpts) {
        field.setValue(newValue.toUpperCase());
    },

    onTxtEstadoChange: function(field, newValue, oldValue, eOpts) {
        field.setValue(newValue.toUpperCase());
    },

    onTxtMunicipioChange: function(field, newValue, oldValue, eOpts) {
        field.setValue(newValue.toUpperCase());
    },

    onTxtLocalidadChange: function(field, newValue, oldValue, eOpts) {
        field.setValue(newValue.toUpperCase());
    },

    onTxtPaisChange: function(field, newValue, oldValue, eOpts) {
        field.setValue(newValue.toUpperCase());
    },

    onbtnGuardarDF: function(button, e, eOpts) {
        if(Ext.getCmp('chckPredeterminado').getValue()===true){
            Ext.getCmp('predeterminado').setValue("1");
        }else{
            Ext.getCmp('predeterminado').setValue("0");
        }

        var win = button.up('window'),
            form   = Ext.getCmp('formDatosFact'),
            record = form.getRecord(),
            values = form.getValues();


        if(form.isValid()){
            if(values.id_dato_facturacion>0){
                var rfc_length=Ext.getCmp('txtRfcDF').getValue().length;


                if(rfc_length==12 && Ext.getCmp('txtTipoPersonaDF').getValue()=='Física'  ){

                    Ext.MessageBox.show({
                        title : 'Advertencia',
                        buttons : Ext.MessageBox.OK,
                        msg : 'El Uso CFDI seleccionado no aplica a personas morales...' ,
                        icon : Ext.Msg.ERROR
                    });

                }else if(rfc_length==13 && Ext.getCmp('txtTipoPersonaDF').getValue()=='Moral' ){

                    Ext.MessageBox.show({
                        title : 'Advertencia',
                        buttons : Ext.MessageBox.OK,
                        msg : 'El Uso CFDI seleccionado no aplica a personas físicas....' ,
                        icon : Ext.Msg.ERROR
                    });

                }else{


                    form.submit({
                        params: Ext.JSON.encode(values),
                        url: 'api/datosfact/actualiza',
                        waitMsg: 'Procesando información...',
                        success: function() {


                            Ext.MessageBox.show({
                                title : 'Información',
                                buttons : Ext.MessageBox.OK,
                                msg : 'Los datos de facturación han sido actualizados.',
                                icon : Ext.Msg.INFO

                            });
                            Ext.getStore('DatosFactStore').load({
                                params:{
                                    'id_familia': record.data.id_familia
                                }
                            });

                            win.close();
                        },
                        failure: function() {
                            // console.log('FAILURE CAPTURA ESTATUS');
                        }
                    });
                }
            }else{

                //Agregar Datos Facturación.
                var rfc_length=Ext.getCmp('txtRfcDF').getValue().length;
                if(rfc_length==12 && Ext.getCmp('txtTipoPersonaDF').getValue()=='Física' ){

                    Ext.MessageBox.show({
                        title : 'Advertencia',
                        buttons : Ext.MessageBox.OK,
                        msg : 'El Uso CFDI seleccionado no aplica a personas morales...' ,
                        icon : Ext.Msg.ERROR
                    });

                }else if(rfc_length==13 && Ext.getCmp('txtTipoPersonaDF').getValue()=='Moral' ){

                    Ext.MessageBox.show({
                        title : 'Advertencia',
                        buttons : Ext.MessageBox.OK,
                        msg : 'El Uso CFDI seleccionado no aplica a personas físicas....' ,
                        icon : Ext.Msg.ERROR
                    });

                }else{



                    if(Ext.getStore('DatosFactStore').findExact('rfc', values.rfc)!=-1){

                        Ext.MessageBox.show({
                            title : 'Advertencia',
                            buttons : Ext.MessageBox.OK,
                            msg : 'Ya Existe Datos : '+values.rfc+'. Verifique...',
                            icon : Ext.Msg.ERROR
                        });
                    }else{
                        // var recordLogin = Ext.getStore('StoreLogin').data.items[0];
                        //values.id_usuarioAct = recordLogin.data.id_usuario;
                        record = Ext.create('cartera.model.DatosFactModel');
                        console.log(record);
                        record.set(values);
                        //Ext.getStore('FormasPagoStore').add(record);
                        //Ext.getStore('FormasPagoStore').sync();
                        //Ext.getCmp('id_insFP').setValue(Ext._id_institucion);
                        form.submit({
                            params: Ext.JSON.encode(values),
                            url: 'api/datosFact/create',
                            waitMsg: 'Procesando información...',
                            success: function() {


                                Ext.MessageBox.show({
                                    title : 'Información',
                                    buttons : Ext.MessageBox.OK,
                                    msg : 'Datos '+values.rfc+' ha sido agregado.',
                                    icon : Ext.Msg.INFO

                                });
                                Ext.getStore('DatosFactStore').load({
                                    params:{
                                        'id_familia': record.data.id_familia
                                    }
                                });

                                win.close();
                            },
                            failure: function() {
                                //console.log('FAILURE CAPTURA INSTITUCION');
                            }
                        });


                    }
                }
            }

        }else{
            //Si el formulario no es válido
            Ext.MessageBox.show({
                title : 'Atencion',
                buttons : Ext.MessageBox.OK,
                msg : 'Ingrese todos los campos obligatorios',
                icon : Ext.Msg.ERROR
            });
        }
    },

    onbtnCancelarDF: function(button, e, eOpts) {
        button.up('window').close();
    },

    onDatosFactWinAfterRender: function(component, eOpts) {
        Ext.getStore('UsoCFDIDfStore').load({
            params:{
                'id_ins': Ext._id_institucion
            },
        });

        Ext.getCmp('cmdUsocfdiDF').setValue(records[0].data.uso);


        Ext.getStore("UsoCFDIDfStore").load({
            params : {
                'id_ins' : Ext._id_institucion
            },
            callback : function(records, operation, success) {
                if(success) {
                    console.log(records);
                    //Ext.getCmp("cmdUsocfdiDF").setValue();
                }
            }
        });
    }

});
