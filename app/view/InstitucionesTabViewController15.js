/*
 * File: app/view/InstitucionesTabViewController15.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cartera.view.InstitucionesTabViewController15', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.capturacobrostab',

    onBtnAgregarCobrosClick1: function(button, e, eOpts) {
        var FormCobros = Ext.create('cartera.view.CapturaCobrosWin');
        FormCobros.show();
    },

    onBtnBorrarCobrosClick: function(button, e, eOpts) {
        var record = Ext.getCmp('GridCobros').getSelectionModel().getSelection()[0];
        if(record !== undefined){
            var estatus = Ext.getCmp('GridCobros').getSelectionModel().getSelection()[0].data.id_estatus_cobro;
            var descripcion = Ext.getCmp('GridCobros').getSelectionModel().getSelection()[0].data.nombre;
            console.log(estatus);
            if(estatus === 1){
                Ext.MessageBox.show({
                    title : 'Desactivar Cobro',
                    buttons : Ext.MessageBox.YESNO,
                    buttonText:{
                        yes:'Sí',
                        no:'No',
                        cancel:'Cancelar'
                    },
                    msg : '¿Desea Desactivar a '+descripcion+'?',
                    icon : Ext.Msg.WARNING,
                    fn : function(btn)
                    {
                        if (btn == 'yes')
                        {
                            var values= {'id_estatus_cobro': 0};
                            record.set(values);
                            Ext.getStore('CapturaCobrosStore').sync({
                                callback: function(records, operation, success)
                                {
                                    Ext.MessageBox.show({
                                        title : 'Desactivar Cobro',
                                        buttons : Ext.MessageBox.OK,
                                        msg : 'Cobro desactivado correctamente',
                                        icon : Ext.Msg.INFO
                                    });
                                }
                            });
                        }
                    }
                });
            }
            else{
                Ext.MessageBox.show({
                    title : 'Activar Cobro',
                    buttons : Ext.MessageBox.YESNO,
                    buttonText:{
                        yes:'Sí',
                        no:'No',
                        cancel:'Cancelar'
                    },
                    msg : '¿Desea Activar a '+descripcion+'?',
                    icon : Ext.Msg.WARNING,
                    fn : function(btn)
                    {
                        if (btn == 'yes')
                        {
                            var values= {'id_estatus_cobro': 1};
                            record.set(values);
                            Ext.getStore('CapturaCobrosStore').sync({
                                callback: function(records, operation, success)
                                {
                                    Ext.MessageBox.show({
                                        title : 'Activar Cobro',
                                        buttons : Ext.MessageBox.OK,
                                        msg : 'Cobro activado correctamente',
                                        icon : Ext.Msg.INFO
                                    });
                                }
                            });
                        }
                    }
                });
            }
        }
        else{
            Ext.MessageBox.show({
                title : 'Información',
                buttons : Ext.MessageBox.OK,
                msg : 'Seleccione registro.',
                icon : Ext.Msg.INFO
            });

        }
    },

    onBtnModificarCobrosClick: function(button, e, eOpts) {
        records = Ext.getCmp('GridPromos').getSelectionModel().getSelection();
        if(records.length > 0){
            var WinCuotasInscripcion = Ext.create('cartera.view.PromocionesInsWin'),
                EditForm = WinCuotasInscripcion.down('form'),
                record = records[0],
                form = Ext.getCmp('formPromocionesIns');

            WinCuotasInscripcion.setTitle('Modificar Promoción');
            form.getForm().loadRecord(record);
            //Ext.getCmp('institucionescmb').disabled=true;

        }else{
            Ext.MessageBox.show({
                title : 'Advertencia',
                buttons : Ext.MessageBox.OK,
                msg : 'Seleccione registro.',
                icon : Ext.Msg.ERROR

            });
        }
    },

    onBtnActualizarCobrosClick: function(button, e, eOpts) {
        Ext.getStore('CapturaCobrosStore').load({
            params:{
                'id_institucion': Ext._id_institucion,
                'id_ciclo_escolar': Ext._id_ciclo_escolar
            },
        });

    },

    onBtnPagosWebClick: function(button, e, eOpts) {
        records = Ext.getCmp('GridCarnets').getSelectionModel().getSelection();

        if(records[0].data.id_carnet_colegiatura===0 && records[0].data.id_carnet_inscripcion===0){
            Ext.MessageBox.show({
                title : 'Advertencia',
                buttons : Ext.MessageBox.OK,
                msg : 'No se han generado carnets para el alumno seleccionado.',
                icon : Ext.Msg.ERROR
            });

        }else{

            if(records[0].data.id_status_ciclo==2){
                Ext.MessageBox.show({
                    title : 'Advertencia',
                    buttons : Ext.MessageBox.OK,
                    msg : 'No se puede enviar carnets en periodos cerrados.',
                    icon : Ext.Msg.ERROR
                });

            }else{

                if(records.length > 0){
                    var WinCuotasInscripcion = Ext.create('cartera.view.CorreoWin'),
                        EditForm = WinCuotasInscripcion.down('formCorreo'),
                        record = records[0],
                        form = Ext.getCmp('formCorreo');

                    WinCuotasInscripcion.setTitle('Enviar Carnets');
                    form.getForm().loadRecord(record);
                    //Ext.getCmp('institucionescmb').disabled=true;

                }else{
                    Ext.MessageBox.show({
                        title : 'Advertencia',
                        buttons : Ext.MessageBox.OK,
                        msg : 'Seleccione registro.',
                        icon : Ext.Msg.ERROR

                    });


                }
            }
        }




    },

    onBtnImportarLayoutClick: function(button, e, eOpts) {
        records = Ext.getCmp('GridCarnets').getSelectionModel().getSelection();

        if(records[0].data.id_carnet_colegiatura===0 && records[0].data.id_carnet_inscripcion===0){
            Ext.MessageBox.show({
                title : 'Advertencia',
                buttons : Ext.MessageBox.OK,
                msg : 'No se han generado carnets para el alumno seleccionado.',
                icon : Ext.Msg.ERROR
            });

        }else{

            if(records[0].data.id_status_ciclo==2){
                Ext.MessageBox.show({
                    title : 'Advertencia',
                    buttons : Ext.MessageBox.OK,
                    msg : 'No se puede enviar carnets en periodos cerrados.',
                    icon : Ext.Msg.ERROR
                });

            }else{

                if(records.length > 0){
                    var WinCuotasInscripcion = Ext.create('cartera.view.CorreoWin'),
                        EditForm = WinCuotasInscripcion.down('formCorreo'),
                        record = records[0],
                        form = Ext.getCmp('formCorreo');

                    WinCuotasInscripcion.setTitle('Enviar Carnets');
                    form.getForm().loadRecord(record);
                    //Ext.getCmp('institucionescmb').disabled=true;

                }else{
                    Ext.MessageBox.show({
                        title : 'Advertencia',
                        buttons : Ext.MessageBox.OK,
                        msg : 'Seleccione registro.',
                        icon : Ext.Msg.ERROR

                    });


                }
            }
        }




    },

    onBtnImportarLayoutClick1: function(button, e, eOpts) {
        records = Ext.getCmp('GridCobros').getSelectionModel().getSelection();
        id_cobro=records[0].data.id_cobro;

        Ext.getCmp("CapturaCobrosTab").setLoading("Realizando Factura, espere un momento...");

        if(records[0].data.id_cuota_transporte>=1 && records[0].data.id_facturacion_transporte==2){

            Ext.getStore('FacturacionIngresosTransporteStore').load({
                params:{
                    'id_cobro': id_cobro
                },
                waitMsg: 'Procesando ...',
                callback : function(success) {
                    //     alert(success);
                    if(success){

                        Ext.MessageBox.show({
                            title : 'Atencion',
                            buttons : Ext.MessageBox.OK,
                            msg : 'Factura timbrada con éxito',
                            icon : Ext.Msg.INFO
                        });




                        Ext.getStore('CapturaCobrosStore').load({
                            params:{
                                'id_institucion': Ext._id_institucion,
                                'id_ciclo_escolar': Ext._id_ciclo_escolar
                            }
                        });

                    }else{

                        Ext.MessageBox.show({
                            title : 'Atencion',
                            buttons : Ext.MessageBox.OK,
                            msg : 'No se ha timbrado la factura',
                            icon : Ext.Msg.ERROR
                        });

                    }
                }
            });


        }else{

            if(records[0].data.id_tipo_movimiento==1){

                Ext.getStore('FacturacionIngresosInsStore').load({
                    params:{
                        'id_cobro': id_cobro
                    },
                    waitMsg: 'Procesando información...',
                    callback : function(success) {
                        if(success){

                            Ext.MessageBox.show({
                                title : 'Atencion',
                                buttons : Ext.MessageBox.OK,
                                msg : 'Factura timbrada con éxito',
                                icon : Ext.Msg.INFO
                            });

                            Ext.getStore('CapturaCobrosStore').load({
                                params:{
                                    'id_institucion': Ext._id_institucion,
                                    'id_ciclo_escolar': Ext._id_ciclo_escolar
                                }
                            });

                        }else{

                            Ext.MessageBox.show({
                                title : 'Atencion',
                                buttons : Ext.MessageBox.OK,
                                msg : 'No se ha timbrado la factura',
                                icon : Ext.Msg.ERROR
                            });

                        }
                    }
                });

            }else{
                console.log("Vamos a Facturar un Ingreso");
                // console.log(Ext.getStore("FacturacionIngresosStore"));

                Ext.getStore('FacturacionIngresosStore').load({
                    params: {
                        'id_cobro': id_cobro
                    },
                    callback: function(records, operation, success) {

                        if(success){
                            var response = Ext.JSON.decode(operation.getResponse().responseText),
                                mensaje = '<div style="text-align: center;">';
                            mensaje += response.message + "<br>";

                            //console.log();
                            var ruta_xml = records[0].data.data.url_xml,
                                ruta_pdf = records[0].data.data.url_pdf;
                            alert(ruta_xml);
                            alert(ruta_pdf);

                            if(ruta_xml !== "" && ruta_pdf !== ""){
                                mensaje += 'Puede descargar los archivos dando click en los enlaces siguientes:';
                                mensaje += '<br><br>';
                                mensaje += '<a href="' + ruta_xml + '/1" target="_blank"><img src="resources/images/xml.png" height="64" width="64" title="Descargar XML"></a>';
                                mensaje += '<a href="' + ruta_pdf + '/1" target="_blank"><img src="resources/images/pdf.png" height="64" width="64" title="Descargar PDF"></a>';
                                mensaje += '<br><br>';
                                mensaje += '¿Desea generar otro comprobante?';
                                btn = Ext.Msg.YESNO;
                                btnText = {yes: 'Sí', no: 'No'};
                                cerrar = true;
                            } else {
                                btn = Ext.Msg.OK;
                                btnText = {ok: "Aceptar"};
                                cerrar = false;
                            }

                            mensaje += '</div>';


                            Ext.getCmp("CapturaCobrosTab").setLoading(false);

                            Ext.MessageBox.show({
                                title : 'Atencion',
                                buttons : Ext.MessageBox.OK,
                                msg : mensaje,//'Factura timbrada con éxito',
                                icon : Ext.Msg.INFO
                            });






                            Ext.getStore('CapturaCobrosStore').load({
                                params:{
                                    'id_institucion': Ext._id_institucion,
                                    'id_ciclo_escolar': Ext._id_ciclo_escolar
                                }
                            });

                        }else{
                            Ext.getCmp("CapturaCobrosTab").setLoading(false);

                            Ext.MessageBox.show({
                                title : 'Atencion',
                                buttons : Ext.MessageBox.OK,
                                msg : 'No se ha timbrado la factura',
                                icon : Ext.Msg.ERROR
                            });

                        }
                    }
                });
            }
        }



    },

    onBtnImportarLayoutClick11: function(button, e, eOpts) {
        var numRegistros=Ext.getStore('CapturaCobrosStore').getCount();

        for(var x=0; x<numRegistros; x++){

            Ext.getCmp('GridCobros').getSelectionModel().select(x);
            records = Ext.getCmp('GridCobros').getSelectionModel().getSelection();
            id_cobro=records[0].data.id_cobro;
            console.log('vuelta:' + x);
            console.log('cobro: ' +records[0].data.id_cobro);



            if(records[0].data.id_cuota_transporte>=1 && records[0].data.id_facturacion_transporte==2){

                Ext.getStore('FacturacionIngresosTransporteStore').load({
                    params:{
                        'id_cobro': id_cobro
                    },
                    waitMsg: 'Procesando ...',
                    callback : function(success) {
                        if(success){

                            Ext.MessageBox.show({
                                title : 'Atencion',
                                buttons : Ext.MessageBox.OK,
                                msg : 'Factura timbrada con éxito',
                                icon : Ext.Msg.INFO
                            });

                            Ext.getStore('CapturaCobrosStore').load({
                                params:{
                                    'id_institucion': Ext._id_institucion,
                                    'id_ciclo_escolar': Ext._id_ciclo_escolar
                                }
                            });

                        }else{

                            Ext.MessageBox.show({
                                title : 'Atencion',
                                buttons : Ext.MessageBox.OK,
                                msg : 'No se ha timbrado la factura',
                                icon : Ext.Msg.ERROR
                            });

                        }
                    }
                });


            }else{

                if(records[0].data.id_tipo_movimiento==1){

                    Ext.getStore('FacturacionIngresosInsStore').load({
                        params:{
                            'id_cobro': id_cobro
                        },
                        waitMsg: 'Procesando información...',
                        callback : function(success) {
                            if(success){

                                Ext.MessageBox.show({
                                    title : 'Atencion',
                                    buttons : Ext.MessageBox.OK,
                                    msg : 'Factura timbrada con éxito',
                                    icon : Ext.Msg.INFO
                                });

                                Ext.getStore('CapturaCobrosStore').load({
                                    params:{
                                        'id_institucion': Ext._id_institucion,
                                        'id_ciclo_escolar': Ext._id_ciclo_escolar
                                    }
                                });

                            }else{

                                Ext.MessageBox.show({
                                    title : 'Atencion',
                                    buttons : Ext.MessageBox.OK,
                                    msg : 'No se ha timbrado la factura',
                                    icon : Ext.Msg.ERROR
                                });

                            }
                        }
                    });

                }else{

                    Ext.getStore('FacturacionIngresosStore').load({
                        params:{
                            'id_cobro': id_cobro
                        },
                        waitMsg: 'Procesando ...',
                        callback : function(success) {
                            if(success){

                                Ext.MessageBox.show({
                                    title : 'Atencion',
                                    buttons : Ext.MessageBox.OK,
                                    msg : 'Factura timbrada con éxito',
                                    icon : Ext.Msg.INFO
                                });

                                Ext.getStore('CapturaCobrosStore').load({
                                    params:{
                                        'id_institucion': Ext._id_institucion,
                                        'id_ciclo_escolar': Ext._id_ciclo_escolar
                                    }
                                });

                            }else{

                                Ext.MessageBox.show({
                                    title : 'Atencion',
                                    buttons : Ext.MessageBox.OK,
                                    msg : 'No se ha timbrado la factura',
                                    icon : Ext.Msg.ERROR
                                });

                            }
                        }
                    });

                }

            }


        }




    },

    onTxtFechaAfterRender: function(component, eOpts) {

    },

    onGridcolumnAfterRender11: function(component, eOpts) {
        Ext.getStore('CapturaCobrosStore').load({
            params:{
                'id_institucion': Ext._id_institucion,
                'id_ciclo_escolar': Ext._id_ciclo_escolar
            },
        });

    }

});
