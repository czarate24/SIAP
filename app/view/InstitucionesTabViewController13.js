/*
 * File: app/view/InstitucionesTabViewController13.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cartera.view.InstitucionesTabViewController13', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.camiontab',

    onBtnActualizarFamiliasACClick: function(button, e, eOpts) {
        Ext.getStore('FamiliasStore').load({
            params:{
                'id_ins': Ext._id_institucion,
                'id_ciclo_escolar': Ext._id_ciclo_escolar
            },
        });


    },

    onTextfieldKeypress: function(textfield, e, eOpts) {
        /*var busqueda = Ext.getCmp('txtBusFamilia').getValue().toUpperCase();
        console.log(busqueda);
        //var rdSolicitada = Ext.getCmp('rdSolicitada').getValue();
        //var rdRefrendo = Ext.getCmp('rdRefrendo').getValue();
        //var rdTodos = Ext.getCmp('rdTodos').getValue();
        if(e.getKey() === e.ENTER){

            Ext.getStore('FamiliasStore').clearFilter();
            Ext.getStore('FamiliasStore').filter({
                filterFn: function(f) {
                    return f.get('ap_paterno').indexOf(busquedaAsignacion) > -1 && f.get('ap_materno').indexOf(busquedaAsignacion) > -1;
                }
            });

        }*/
    },

    onTextfieldChange: function(field, newValue, oldValue, eOpts) {
        //var rdSolicitada = Ext.getCmp('rdSolicitada').getValue();
        //var rdRefrendo = Ext.getCmp('rdRefrendo').getValue();
        //var rdTodos = Ext.getCmp('rdTodos').getValue();
        var busqueda = Ext.getCmp('txtBusFamilia').getValue().toUpperCase();

        if(newValue === ''){

            Ext.getStore('FamiliasStore').clearFilter();

        }else {
            Ext.getStore('FamiliasStore').clearFilter();
            Ext.getStore('FamiliasStore').filter({
                filterFn: function(f) {
                    return f.get('ap_paterno').indexOf(busqueda) > -1;
                }
            });
        }
    },

    onGridcolumnAfterRender: function(component, eOpts) {

        Ext.getStore('FamiliasStore').load({
            params:{
                'id_ins': Ext._id_institucion,
                'id_ciclo_escolar': Ext._id_ciclo_escolar
            },
        });
    },

    onGridFamiliasSelect: function(rowmodel, record, index, eOpts) {



        Ext.getStore('AlumnosStore').load({
            params:{
                'id_familia': record.data.id_familia

            },
            callback: function(){
                Ext.getCmp('GridAlumnosAC').getSelectionModel().select(0);
            }
        });





    },

    onBtnActualizarTutoresClick1: function(button, e, eOpts) {


        Ext.getStore('AlumnosStore').load({
            params:{
                'id_familia': record.data.id_familia
            },
        });

    },

    onGridcolumnAfterRender11: function(component, eOpts) {

    },

    onGridAlumnosSelect: function(rowmodel, record, index, eOpts) {
        Ext.getStore('TransporteAlumnoStore').load({
            params:{
                'id_alumno': record.data.id_alumno
            },
        });
    },

    onBtnAgregarAsigCamionClick: function(button, e, eOpts) {
        // console.log('HANDLER');
        //view.select(record);
        records = Ext.getCmp('GridAlumnosAC').getSelectionModel().getSelection();
        if(records.length > 0){
            var WinDatosFact = Ext.create('cartera.view.AsigCamionWin'),
                EditForm = WinDatosFact.down('form'),
                record = records[0],
                form = Ext.getCmp('formAsigCamion');

            WinDatosFact.setTitle('Asignar Camión');
            form.getForm().loadRecord(record);
            //Ext.getCmp('institucionescmb').disabled=true;

        }else{
            Ext.MessageBox.show({
                title : 'Advertencia',
                buttons : Ext.MessageBox.OK,
                msg : 'Seleccione registro.',
                icon : Ext.Msg.ERROR

            });
        }
    },

    onBtnBorrarDatosFactClick: function(button, e, eOpts) {
        var record = Ext.getCmp('GridAsigCamion').getSelectionModel().getSelection()[0];
        if(record !== undefined){
            var estatus = Ext.getCmp('GridAsigCamion').getSelectionModel().getSelection()[0].data.estatus;
            console.log(estatus);
            if(estatus === 1){
                Ext.MessageBox.show({
                    title : 'Desactivar Mes de Transporte',
                    buttons : Ext.MessageBox.YESNO,
                    buttonText:{
                        yes:'Sí',
                        no:'No',
                        cancel:'Cancelar'
                    },
                    msg : '¿Desea Desactivar el mes seleccionado?',
                    icon : Ext.Msg.WARNING,
                    fn : function(btn)
                    {
                        if (btn == 'yes')
                        {
                            var values= {'estatus': 0};
                            record.set(values);
                            Ext.getStore('TransporteAlumnoStore').sync({
                                callback: function(records, operation, success)
                                {
                                    Ext.MessageBox.show({
                                        title : 'Desactivar Mes de Transporte',
                                        buttons : Ext.MessageBox.OK,
                                        msg : 'Mes desactivado correctamente',
                                        icon : Ext.Msg.INFO
                                    });
                                }
                            });
                        }
                    }
                });
            }
            else{
                Ext.MessageBox.show({
                    title : 'Activar Mes de Transporte',
                    buttons : Ext.MessageBox.YESNO,
                    buttonText:{
                        yes:'Sí',
                        no:'No',
                        cancel:'Cancelar'
                    },
                    msg : '¿Desea Activar el Mes Seleccionado?',
                    icon : Ext.Msg.WARNING,
                    fn : function(btn)
                    {
                        if (btn == 'yes')
                        {
                            var values= {'estatus': 1};
                            record.set(values);
                            Ext.getStore('TransporteAlumnoStore').sync({
                                callback: function(records, operation, success)
                                {
                                    Ext.MessageBox.show({
                                        title : 'Activar Mes Transporte',
                                        buttons : Ext.MessageBox.OK,
                                        msg : 'Mes activado correctamente',
                                        icon : Ext.Msg.INFO
                                    });
                                }
                            });
                        }
                    }
                });
            }
        }
        else{
            Ext.MessageBox.show({
                title : 'Información',
                buttons : Ext.MessageBox.OK,
                msg : 'Seleccione registro.',
                icon : Ext.Msg.INFO
            });

        }
    },

    onBtnActualizarDatosFactClick: function(button, e, eOpts) {
        var idAlumno = Ext.getCmp('GridAlumnosAC').getSelectionModel().getSelection()[0].data.id_alumno;

        Ext.getStore('TransporteAlumnoStore').load({
            params:{
                'id_alumno': idAlumno
            },
        });
    },

    onCmbTransporteChange: function(field, newValue, oldValue, eOpts) {
        var lengthRecord = field.lastSelectedRecords;
        var cuota = field.getSelectedRecord().data.cuota;
        console.log(field.getSelectedRecord().data.cuota);
        if(lengthRecord !== null){
            Ext.getCmp('txtCuotaT').setValue(cuota);


        }
        var seleccion = Ext.getCmp('GridAsigCamion').getSelectionModel().getSelection()[0];
        console.log(seleccion);
        seleccion.data.id_cuota_transporte = field.getSelectedRecord().data.id_cuota_transporte;
        seleccion.data.cuota = field.getSelectedRecord().data.cuota;

    },

    onGridcolumnAfterRender111: function(component, eOpts) {

    },

    onRowEditingEdit: function(editor, context, eOpts) {
        console.log('edit');
        Ext.getStore('TransporteAlumnoStore').sync();
        var idAlumno = Ext.getCmp('GridAlumnosAC').getSelectionModel().getSelection()[0].data.id_alumno;


    }

});
