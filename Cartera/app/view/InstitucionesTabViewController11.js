/*
 * File: app/view/InstitucionesTabViewController11.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cartera.view.InstitucionesTabViewController11', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.karnetstab',

    onTxtBuscarAlumnoChange: function(field, newValue, oldValue, eOpts) {

        var busqueda = Ext.getCmp('txtBuscarAlumno').getValue().toUpperCase();

        if(newValue === ''){

            Ext.getStore('CarnetsStore').clearFilter();

        }else {
            Ext.getStore('CarnetsStore').clearFilter();
            Ext.getStore('CarnetsStore').filter({
                filterFn: function(f) {
                    return f.get('ap_paterno').indexOf(busqueda) > -1;
                }
            });
        }
    },

    onBtnAgregarCarnetsClick: function(button, e, eOpts) {
        records = Ext.getCmp('GridCarnetsIns').getSelectionModel().getSelection();
        var record = Ext.getCmp('GridCarnetsIns').getSelectionModel().getSelection()[0];
        if(record !== undefined){

            if(records[0].data.id_status_ciclo==2){
                Ext.MessageBox.show({
                    title : 'Advertencia',
                    buttons : Ext.MessageBox.OK,
                    msg : 'No se puede generar carnets en ciclos cerrados.',
                    icon : Ext.Msg.ERROR
                });

            }else if(records[0].data.id_status_ciclo==3 && records[0].data.id_nivel_educativo==4 && records[0].data.grado==6){
                Ext.MessageBox.show({
                    title : 'Advertencia',
                    buttons : Ext.MessageBox.OK,
                    msg : 'No genera carnet.',
                    icon : Ext.Msg.ERROR
                });



            }else{

                if(records.length > 0){
                    var WinCuotasInscripcion = Ext.create('cartera.view.CarnetsInsWin'),
                        EditForm = WinCuotasInscripcion.down('form'),
                        record = records[0],
                        form = Ext.getCmp('formCarnetsIns');

                    WinCuotasInscripcion.setTitle('Generar Carnets de Inscripción');
                    form.getForm().loadRecord(record);
                    //Ext.getCmp('institucionescmb').disabled=true;

                }else{
                    Ext.MessageBox.show({
                        title : 'Advertencia',
                        buttons : Ext.MessageBox.OK,
                        msg : 'Seleccione registro.',
                        icon : Ext.Msg.ERROR

                    });

                }
            }
        }else{
            Ext.MessageBox.show({
                title : 'Información',
                buttons : Ext.MessageBox.OK,
                msg : 'Seleccione registro.',
                icon : Ext.Msg.INFO
            });

        }

    },

    onBtnBorrarCarnetsClick: function(button, e, eOpts) {
        var record = Ext.getCmp('GridCuoIns').getSelectionModel().getSelection()[0];
        if(record !== undefined){
            var estatus = Ext.getCmp('GridCuoIns').getSelectionModel().getSelection()[0].data.estatus;
            var descripcion = Ext.getCmp('GridCuoIns').getSelectionModel().getSelection()[0].data.descripcion;
            console.log(estatus);
            if(estatus === 1){
                Ext.MessageBox.show({
                    title : 'Desactivar Cuota',
                    buttons : Ext.MessageBox.YESNO,
                    buttonText:{
                        yes:'Sí',
                        no:'No',
                        cancel:'Cancelar'
                    },
                    msg : '¿Desea Desactivar a '+descripcion+'?',
                    icon : Ext.Msg.WARNING,
                    fn : function(btn)
                    {
                        if (btn == 'yes')
                        {
                            var values= {'estatus': 0};
                            record.set(values);
                            Ext.getStore('CuotasInscripcionStore').sync({
                                callback: function(records, operation, success)
                                {
                                    Ext.MessageBox.show({
                                        title : 'Desactivar Cuota',
                                        buttons : Ext.MessageBox.OK,
                                        msg : 'Cuota desactivada correctamente',
                                        icon : Ext.Msg.INFO
                                    });
                                }
                            });
                        }
                    }
                });
            }
            else{
                Ext.MessageBox.show({
                    title : 'Activar Cuota',
                    buttons : Ext.MessageBox.YESNO,
                    buttonText:{
                        yes:'Sí',
                        no:'No',
                        cancel:'Cancelar'
                    },
                    msg : '¿Desea Activar a '+descripcion+'?',
                    icon : Ext.Msg.WARNING,
                    fn : function(btn)
                    {
                        if (btn == 'yes')
                        {
                            var values= {'estatus': 1};
                            record.set(values);
                            Ext.getStore('CuotasInscripcionStore').sync({
                                callback: function(records, operation, success)
                                {
                                    Ext.MessageBox.show({
                                        title : 'Activar Cuota',
                                        buttons : Ext.MessageBox.OK,
                                        msg : 'Cuota activada correctamente',
                                        icon : Ext.Msg.INFO
                                    });
                                }
                            });
                        }
                    }
                });
            }
        }
        else{
            Ext.MessageBox.show({
                title : 'Información',
                buttons : Ext.MessageBox.OK,
                msg : 'Seleccione registro.',
                icon : Ext.Msg.INFO
            });

        }
    },

    onBtnModificarCarnetsClick: function(button, e, eOpts) {
        records = Ext.getCmp('GridPromos').getSelectionModel().getSelection();
        if(records.length > 0){
            var WinCuotasInscripcion = Ext.create('cartera.view.PromocionesInsWin'),
                EditForm = WinCuotasInscripcion.down('form'),
                record = records[0],
                form = Ext.getCmp('formPromocionesIns');

            WinCuotasInscripcion.setTitle('Modificar Promoción');
            form.getForm().loadRecord(record);
            //Ext.getCmp('institucionescmb').disabled=true;

        }else{
            Ext.MessageBox.show({
                title : 'Advertencia',
                buttons : Ext.MessageBox.OK,
                msg : 'Seleccione registro.',
                icon : Ext.Msg.ERROR

            });
        }
    },

    onBtnActualizarCarnetsClick: function(button, e, eOpts) {
        Ext.getStore('CarnetsInsStore').load({
            params:{
                'id_ins': Ext._id_institucion,
                'id_ciclo_escolar': Ext._id_ciclo_escolar
            },
        });
    },

    onBtnActualizarCoreoClick: function(button, e, eOpts) {
        var record = Ext.getCmp('GridCarnetsIns').getSelectionModel().getSelection()[0];
        if(record !== undefined){


            if(records[0].data.id_carnet_colegiatura===0 && records[0].data.id_carnet_inscripcion===0){
                Ext.MessageBox.show({
                    title : 'Advertencia',
                    buttons : Ext.MessageBox.OK,
                    msg : 'No se han generado carnets para el alumno seleccionado.',
                    icon : Ext.Msg.ERROR
                });

            }else{

                if(records[0].data.id_status_ciclo==2){
                    Ext.MessageBox.show({
                        title : 'Advertencia',
                        buttons : Ext.MessageBox.OK,
                        msg : 'No se puede enviar carnets en periodos cerrados.',
                        icon : Ext.Msg.ERROR
                    });

                }else{

                    if(records.length > 0){
                        var WinCuotasInscripcion = Ext.create('cartera.view.CorreoInsWin'),
                            EditForm = WinCuotasInscripcion.down('formCorreoIns'),
                            record = records[0],
                            form = Ext.getCmp('formCorreoIns');

                        WinCuotasInscripcion.setTitle('Enviar Carnets de Inscripción');
                        form.getForm().loadRecord(record);
                        //Ext.getCmp('institucionescmb').disabled=true;

                    }else{
                        Ext.MessageBox.show({
                            title : 'Advertencia',
                            buttons : Ext.MessageBox.OK,
                            msg : 'Seleccione registro.',
                            icon : Ext.Msg.ERROR

                        });


                    }
                }
            }



        }else{
            Ext.MessageBox.show({
                title : 'Información',
                buttons : Ext.MessageBox.OK,
                msg : 'Seleccione registro.',
                icon : Ext.Msg.INFO
            });

        }

    },

    onGridcolumnAfterRender11: function(component, eOpts) {

        Ext.getStore('CarnetsInsStore').load({
            params:{
                'id_ins': Ext._id_institucion,
                'id_ciclo_escolar': Ext._id_ciclo_escolar
            },
        });



    }

});
