/*
 * File: app/view/InstitucionesWinViewController21.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cartera.view.InstitucionesWinViewController21', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.parcialidadeswin',

    onTxtMatriculaASpecialkey: function(field, e, eOpts) {
        var matricula = Ext.getCmp('txtMatriculaPar').getValue();

        if (e.getKey() == e.ENTER) {
            Ext._id_alumno=0;
            Ext.getCmp('ParcialidadesForm').getForm().reset();
            Ext.getCmp('ParcialidadesForm').getForm().reset();

            Ext.getStore('ParcialidadesStore').load({
                params:{
                    'matricula': matricula
                },
                callback: function(records) {
                    if (records.length > 0) {
                        var datos= records[0].data;
                        Ext.getCmp('txtAlumnoPar').setValue(datos.nombre);
                        Ext.getCmp('txtNivelPar').setValue(datos.nivel);
                        Ext.getCmp('txtMatriculaPar').setValue(datos.matricula);
                        Ext.getCmp('txtGradoPar').setValue(datos.grado);
                        Ext.getCmp('txtConceptoPar').setValue(datos.concepto);
                        Ext.getCmp('txtGrupoPar').setValue(datos.grupo);
                        Ext.getCmp('cmbRFCPar').setValue(datos.rfc);
                        Ext.getCmp('txtRazonSocialPar').setValue(datos.razon_social);
                        Ext.getCmp('txtUsoCFDIPar').setValue(datos.usoCFDI);
                        Ext.getCmp('txtTotalPar').setValue(datos.total);
                        Ext.getCmp('id_dato_factPar').setValue(datos.id_dato_facturacion);

                        Ext._total=datos.total;
                        Ext.getCmp('txtDescPar').setValue("0");
                        if(datos.f_andes==1){
                            Ext.getCmp('txtNumPar').setValue('10');
                            Ext.getCmp('chckNomina').enable();
                            Ext.getCmp('chckNomina').setValue(true);
                        }else{
                            Ext.getCmp('txtNumPar').setValue('6');
                            Ext.getCmp('chckNomina').disable();
                            if(datos.total%6===0){
                                Ext.getCmp('txtPago2Par').setValue("0");
                                Ext.getCmp('txtPago2Par').disable();
                                Ext.getCmp('txtNum2Par').disable();
                                Ext.getCmp('txtNumPagoPar').setValue('6');
                                Ext.getCmp('txtPagoPar').setValue(datos.total/6);

                            }else{
                                Ext.getCmp('txtPago2Par').enable();
                                Ext.getCmp('txtNum2Par').enable();
                                Ext.getCmp('txtNumPagoPar').setValue('5');
                                Ext.getCmp('txtPagoPar').setValue(datos.total/6);
                                var ultimo_pago=datos.total-(Ext.getCmp('txtPagoPar').getValue()*5);
                                Ext.getCmp('txtNum2Par').setValue('1');
                                Ext.getCmp('txtPago2Par').setValue(ultimo_pago);

                            }
                        }
                        Ext._id_alumno=datos.id_alumno;
                        Ext.getCmp('txtImportePar').setValue(datos.cuota);
                        Ext.getCmp('txtDescuentoPromPar').setValue(datos.descuento);
                        Ext.getCmp('txtSubtotalPar').setValue(datos.total);
                        Ext.getCmp('txtDescuentoPar').setValue(Ext.getCmp('txtDescPar').getValue());
                        Ext.getCmp('txtSaldoPar').setValue(datos.total-Ext.getCmp('txtDescuentoPar').getValue());
                        Ext.getCmp('id_ciclo_escolarPar').setValue(Ext._id_ciclo_escolar);
                        Ext.getCmp('id_institucionPar').setValue(Ext._id_institucion);
                        Ext.getCmp('id_alumnoPar').setValue(Ext._id_alumno);
                        Ext.getCmp('id_carnet_inscripcionPar').setValue(datos.id_carnet_inscripcion);
                        Ext.getCmp('id_desc_inscripcionPar').setValue(datos.id_descuento_inscripcion);



                    }


                    Ext.getStore('cmbRFCStore').load({
                        params:{
                            'id_alumno': Ext._id_alumno
                        },
                        callback: function(records) {
                            if (records.length <= 0) {
                                Ext.getCmp('cmbRFCPar').setValue('XAXX010101000');
                                Ext.getCmp('txtRazonSocialPar').setValue(Ext.getCmp('txtAlumnoPar').getValue());
                                Ext.getCmp('txtUsoCFDIPar').setValue("D10");
                                Ext.getCmp('id_dato_factPar').setValue("0");

                            }

                        }

                    });



                }




            });



        }


    },

    onbtnGuardarCobro1: function(button, e, eOpts) {

        var AlumnosParcialidad = Ext.create('cartera.view.AlumnosParcialidadTab');

        AlumnosParcialidad.show();


    },

    onTxtDescParChange: function(field, newValue, oldValue, eOpts) {
        Ext.getCmp('txtTotalPar').setValue(Ext._total-Ext.getCmp('txtDescPar').getValue());

        if(Ext.getCmp('txtTotalPar').getValue() % Ext.getCmp('txtNumPar').getValue()===0){
            Ext.getCmp('txtPago2Par').disable();
            Ext.getCmp('txtNum2Par').disable();
            Ext.getCmp('txtNumPagoPar').setValue(Ext.getCmp('txtNumPar').getValue());
            Ext.getCmp('txtPago2Par').setValue("0");
            Ext.getCmp('txtPagoPar').setValue(Ext.getCmp('txtTotalPar').getValue() / Ext.getCmp('txtNumPar').getValue());
        }else{
            Ext.getCmp('txtPago2Par').enable();
            Ext.getCmp('txtNum2Par').enable();
            Ext.getCmp('txtNumPagoPar').setValue(Ext.getCmp('txtNumPar').getValue()-1);
            Ext.getCmp('txtPagoPar').setValue(Ext.getCmp('txtTotalPar').getValue() / (Ext.getCmp('txtNumPar').getValue()));
            var ultimo_pago=Ext.getCmp('txtTotalPar').getValue()-(Ext.getCmp('txtPagoPar').getValue()* (Ext.getCmp('txtNumPar').getValue()-1));
            Ext.getCmp('txtNum2Par').setValue('1');
            Ext.getCmp('txtPago2Par').setValue(ultimo_pago);

        }


        Ext.getCmp('txtDescuentoPar').setValue(Ext.getCmp('txtDescPar').getValue());
        Ext.getCmp('txtSaldoPar').setValue(Ext.getCmp('txtSubtotalPar').getValue()-Ext.getCmp('txtDescuentoPar').getValue());
    },

    onTxtNumParChange: function(field, newValue, oldValue, eOpts) {


        if(Ext.getCmp('txtTotalPar').getValue() % Ext.getCmp('txtNumPar').getValue()===0){
            Ext.getCmp('txtPago2Par').disable();
            Ext.getCmp('txtNum2Par').disable();
            Ext.getCmp('txtNumPagoPar').setValue(Ext.getCmp('txtNumPar').getValue());
            Ext.getCmp('txtPagoPar').setValue(Ext.getCmp('txtTotalPar').getValue() / Ext.getCmp('txtNumPar').getValue());
            Ext.getCmp('txtPago2Par').setValue("0");
        }else{
            Ext.getCmp('txtPago2Par').enable();
            Ext.getCmp('txtNum2Par').enable();
            Ext.getCmp('txtNumPagoPar').setValue(Ext.getCmp('txtNumPar').getValue()-1);
            Ext.getCmp('txtPagoPar').setValue(Ext.getCmp('txtTotalPar').getValue() / (Ext.getCmp('txtNumPar').getValue()));
            var ultimo_pago=Ext.getCmp('txtTotalPar').getValue()-(Ext.getCmp('txtPagoPar').getValue()* (Ext.getCmp('txtNumPar').getValue()-1));
            Ext.getCmp('txtNum2Par').setValue('1');
            Ext.getCmp('txtPago2Par').setValue(ultimo_pago);

        }
    },

    onCmbRFCFChange: function(field, newValue, oldValue, eOpts) {

        if(Ext._id_alumno>=1){
            datos = field.lastSelectedRecords[0].data;
            Ext.getCmp('txtRazonSocialPar').setValue(datos.razon_social);
            Ext.getCmp('txtUsoCFDIPar').setValue(datos.usoCFDI);
        }


    },

    onTxtDescuentoCoSpecialkey: function(field, e, eOpts) {
        if (e.getKey() == e.ENTER) {
            var descuento=parseInt(Ext.getCmp('txtDescuentoCo').getValue());
            var importe=parseInt(Ext.getCmp('txtSubtotalCo').getValue());
            var recargos=parseInt(Ext.getCmp('txtRecargoCo').getValue());
            var total=importe+recargos-descuento;
            Ext.getCmp('txtSaldoCo').setValue(total + '.00');
        }
    },

    onTxtDescuentoCoFocusleave: function(component, event, eOpts) {
        var descuento=parseInt(Ext.getCmp('txtDescuentoCo').getValue());
        var importe=parseInt(Ext.getCmp('txtSubtotalCo').getValue());
        var recargos=parseInt(Ext.getCmp('txtRecargoCo').getValue());
        var total=importe+recargos-descuento;
        Ext.getCmp('txtSaldoCo').setValue(total + '.00');
    },

    onbtnGuardarParcialidad: function(button, e, eOpts) {
        if(Ext.getCmp('chckNomina').getValue()===true){
            Ext.getCmp('txtNomina').setValue("1");
        }else{
            Ext.getCmp('txtNomina').setValue("0");
        }


        var win = button.up('window'),
            form   = Ext.getCmp('ParcialidadesForm'),
            record = form.getRecord(),
            values = form.getValues();


        if(Ext.getCmp('txtRazonSocialPar').getValue()===""){
            //Si el formulario no es v√°lido
            Ext.MessageBox.show({
                title : 'Atencion',
                buttons : Ext.MessageBox.OK,
                msg : 'Seleccione un RFC',
                icon : Ext.Msg.ERROR
            });
        }else{
            if(form.isValid()){
                Ext.getCmp('txtPago2Par').enable();
                record = Ext.create('cartera.model.ParcialidadesModel');
                record.set(values);


                form.submit({
                    params: Ext.JSON.encode(values),
                    url: 'api/parcialidades/create',
                    waitMsg: 'Procesando informaci√≥n...',
                    success: function() {

                        Ext.MessageBox.show({
                            title : 'Informaci√≥n',
                            buttons : Ext.MessageBox.OK,
                            msg : 'La Parcialidad ha sido agregada.',
                            icon : Ext.Msg.INFO

                        });

                        Ext.getStore('MostrarParcialidadStore').load({
                            params:{
                                'id_institucion': Ext._id_institucion,
                                'id_ciclo_escolar': Ext._id_ciclo_escolar
                            },
                        });

                        win.close();

                    },
                    failure: function() {
                        console.log('FAILURE CAPTURA INSTITUCION');
                    }
                });



            }else{
                Ext.MessageBox.show({
                    title : 'Atencion',
                    buttons : Ext.MessageBox.OK,
                    msg : 'Ingrese todos los datos.',
                    icon : Ext.Msg.ERROR
                });
            }



        }
    },

    onbtnCancelarCobro: function(button, e, eOpts) {
        button.up('window').close();
    },

    onWinGen1AfterRender: function(component, eOpts) {

    }

});
