/*
 * File: app/view/InstitucionesTabViewController19.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cartera.view.InstitucionesTabViewController19', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.alumnosanualidadtab',

    onTextfieldChange: function(field, newValue, oldValue, eOpts) {
        var busqueda = Ext.getCmp('txtBuscarAlumnoC').getValue().toUpperCase();

        if(newValue === ''){

            Ext.getStore('BusAlumnoStore').clearFilter();

        }else {
            Ext.getStore('BusAlumnoStore').clearFilter();
            Ext.getStore('BusAlumnoStore').filter({
                filterFn: function(f) {
                    return f.get('ap_paterno').indexOf(busqueda) > -1;
                }
            });
        }
    },

    onTextfieldKeypress: function(textfield, e, eOpts) {
        var busqueda = Ext.getCmp('txtBuscarAlumnoC').getValue().toUpperCase();

        if(newValue === ''){

            Ext.getStore('BusAlumnoStore').clearFilter();

        }else {
            Ext.getStore('BusAlumnoStore').clearFilter();
            Ext.getStore('BusAlumnoStore').filter({
                filterFn: function(f) {
                    return f.get('ap_paterno').indexOf(busqueda) > -1;
                }
            });
        }
    },

    onGridcolumnAfterRender: function(component, eOpts) {
        Ext.getStore('BusAlumnoStore').load({
            params:{
                'id_institucion': Ext._id_institucion
            },
        });

    },

    onGridAlumosCCellDblClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
        alert('AlumnosAnualidadTab');
        Ext._id_alumno=0;
        Ext.getCmp('AnualidadesForm').getForm().reset();
        Ext.getCmp('AnualidadesForm').getForm().reset();

        Ext.getStore('CobrosAlumnoStore').load({
            params:{
                'matricula': record.data.matricula_nueva
            },
            callback: function(records) {
                if (records.length > 0) {
                    var datos= records[0].data;
                    Ext.getCmp('txtAlumnoAnu').setValue(datos.nombre);
                    Ext.getCmp('txtId_alumnoAnu').setValue(datos.id_alumno);
                    Ext.getCmp('txtNivelAnu').setValue(datos.nivel);
                    Ext.getCmp('txtMatriculaAnu').setValue(datos.matricula);
                    Ext.getCmp('txtGradoAnu').setValue(datos.grado);
                    Ext.getCmp('txtGrupoAnu').setValue(datos.grupo);
                    Ext.getCmp('cmbRFCAnu').setValue(datos.rfc);
                    Ext.getCmp('txtReferenciaAnu').setValue(datos.referencia);
                    Ext.getCmp('cmbTipoAnu').setValue("COLEGIATURA");
                    Ext.getCmp('txtRazonSocialAnu').setValue(datos.razon_social);
                    Ext.getCmp('txtUsoCFDIAnu').setValue(datos.usoCFDI);
                    Ext.getCmp('txtIdDatoFacAnu').setValue(datos.id_dato_facturacion);
                    Ext._id_alumno=datos.id_alumno;
                    Ext.getCmp('id_ciclo_anualidad').setValue(Ext._id_ciclo_escolar);
                    Ext.getCmp('id_institucion_anualidad').setValue(Ext._id_institucion);
                    //  id_institucion_cobroAnu



                }


                Ext.getStore('cmbRFCStore').load({
                    params:{
                        'id_alumno': Ext._id_alumno
                    },
                    callback: function(records) {
                        if (records.length <= 0) {
                            Ext.getCmp('cmbRFCAnu').setValue('XAXX010101000');
                            Ext.getCmp('txtRazonSocialAnu').setValue(Ext.getCmp('txtAlumnoAnu').getValue());
                            Ext.getCmp('txtUsoCFDIAnu').setValue("D10");
                            Ext.getCmp('txtIdDatoFacAnu').setValue("0");

                        }

                    }

                });

                Ext.getStore('MesesAnualidadStore').load({
                    params:{
                        'id_institucion': Ext._id_institucion,
                        'id_ciclo_escolar': Ext._id_ciclo_escolar,
                        'id_alumno': Ext._id_alumno

                    }
                });



                Ext.getStore('ImportesAnualidadStore').load({
                    params:{
                        'id_ciclo_escolar': Ext._id_ciclo_escolar,
                        'id_alumno': Ext._id_alumno,

                    },

                    callback: function(records) {
                        if (records.length >= 0) {
                            var importe=records[0].data;
                            Ext.getCmp('txtImporteAnu').setValue(importe.cuota);
                            Ext.getCmp('txtDescuentoBecaAnu').setValue(importe.beca);
                            Ext.getCmp('txtTransporteAnu').setValue(importe.transporte);
                            Ext.getCmp('txtSubtotalAnu').setValue(importe.subtotal);
                            Ext.getCmp('txtDescuentoAnu').setValue(importe.descuento);
                            Ext.getCmp('txtSaldoAnu').setValue(importe.importe);

                        }
                    }

                });

            }




        });


        Ext.getCmp('AlumnosAnualidadTab').destroy();
    }

});
