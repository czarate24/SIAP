/*
 * File: app/view/InstitucionesTabViewController18.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cartera.view.InstitucionesTabViewController18', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.carnetscoltab',

    onBtnActualizarFamiliasACClick: function(button, e, eOpts) {
        Ext.getStore('CarnetsAlumnosStore').load({
            params:{
                'id_institucion': Ext._id_institucion,
                'id_ciclo_escolar': Ext._id_ciclo_escolar
            },
        });


        Ext.getStore('CarnetsColStore').load({
            params:{
                'id_alumno': 0,
                'id_institucion': Ext._id_institucion,
                'id_ciclo_escolar': Ext._id_ciclo_escolar

            }
        });

    },

    onTextfieldChange: function(field, newValue, oldValue, eOpts) {
        //var rdSolicitada = Ext.getCmp('rdSolicitada').getValue();
        //var rdRefrendo = Ext.getCmp('rdRefrendo').getValue();
        //var rdTodos = Ext.getCmp('rdTodos').getValue();
        var busqueda = Ext.getCmp('txtBusAlumno').getValue().toUpperCase();

        if(newValue === ''){

            Ext.getStore('AlumnosCarnetsStore').clearFilter();

        }else {
            Ext.getStore('AlumnosCarnetsStore').clearFilter();
            Ext.getStore('AlumnosCarnetsStore').filter({
                filterFn: function(f) {
                    return f.get('ap_paterno').indexOf(busqueda) > -1 || f.get('ap_materno').indexOf(busqueda) > -1 || f.get('nombre').indexOf(busqueda) > -1 || f.get('matricula').indexOf(busqueda) > -1;
                }
            });
        }

    },

    onGridcolumnAfterRender: function(component, eOpts) {

        Ext.getStore('CarnetsAlumnosStore').load({
            params:{
                'id_institucion': Ext._id_institucion,
                'id_ciclo_escolar': Ext._id_ciclo_escolar
            },
            callback: function(){
                Ext.getCmp('GridCarnetsCol').getSelectionModel().select(0);
            }

        });


    },

    onGridFamiliasSelect: function(rowmodel, record, index, eOpts) {



        Ext.getStore('CarnetsColStore').load({
            params:{
                'id_alumno': record.data.id_alumno,
                'id_institucion': Ext._id_institucion,
                'id_ciclo_escolar': Ext._id_ciclo_escolar

            }
        });





    },

    onBtnAgregarCarnetsColClick: function(button, e, eOpts) {

        records = Ext.getCmp('GridAlumnosCCol').getSelectionModel().getSelection();
        var record = Ext.getCmp('GridAlumnosCCol').getSelectionModel().getSelection()[0];

        if(record !== undefined){
            if(records[0].data.id_status_ciclo==2){
                Ext.MessageBox.show({
                    title : 'Advertencia',
                    buttons : Ext.MessageBox.OK,
                    msg : 'No se puede generar carnets en ciclos cerrados.',
                    icon : Ext.Msg.ERROR
                });

            }else if(records[0].data.id_status_ciclo==3 && records[0].data.id_nivel_educativo==4 && records[0].data.grado==6){
                Ext.MessageBox.show({
                    title : 'Advertencia',
                    buttons : Ext.MessageBox.OK,
                    msg : 'No genera carnet.',
                    icon : Ext.Msg.ERROR
                });



            }else{

                if(records.length > 0){
                    var WinCuotasInscripcion = Ext.create('cartera.view.CarnetsColWin'),
                        EditForm = WinCuotasInscripcion.down('form'),
                        record = records[0],
                        form = Ext.getCmp('formCarnetsCol');

                    WinCuotasInscripcion.setTitle('Generar Carnets de Colegiatura');
                    form.getForm().loadRecord(record);
                    //Ext.getCmp('institucionescmb').disabled=true;

                }else{
                    Ext.MessageBox.show({
                        title : 'Advertencia',
                        buttons : Ext.MessageBox.OK,
                        msg : 'Seleccione registro.',
                        icon : Ext.Msg.ERROR

                    });

                }
            }
        }else{
            Ext.MessageBox.show({
                title : 'Información',
                buttons : Ext.MessageBox.OK,
                msg : 'Seleccione registro.',
                icon : Ext.Msg.INFO
            });

        }
    },

    onBtnbtnCorreoColClick: function(button, e, eOpts) {
        recordCar = Ext.getCmp('GridCarnetsCol').getSelectionModel().getSelection();
        records = Ext.getCmp('GridAlumnosCCol').getSelectionModel().getSelection();
        records[0].data.concepto=recordCar[0].data.concepto;
        records[0].data.id_carnet_colegiatura=recordCar[0].data.id_carnet_colegiatura;
        if(recordCar !== undefined){

            if(records[0].data.id_status_ciclo==2){
                Ext.MessageBox.show({
                    title : 'Advertencia',
                    buttons : Ext.MessageBox.OK,
                    msg : 'No se puede enviar carnets en periodos cerrados.',
                    icon : Ext.Msg.ERROR
                });

            }else{

                if(records.length > 0){
                    var WinCuotasInscripcion = Ext.create('cartera.view.CorreoColWin'),
                        EditForm = WinCuotasInscripcion.down('formCorreoCol'),
                        record = records[0],
                        form = Ext.getCmp('formCorreoCol');

                    WinCuotasInscripcion.setTitle('Enviar Carnets de Colegiatura');

                }else{
                    Ext.MessageBox.show({
                        title : 'Advertencia',
                        buttons : Ext.MessageBox.OK,
                        msg : 'Seleccione registro.',
                        icon : Ext.Msg.ERROR

                    });


                }

            }

        }else{
            Ext.MessageBox.show({
                title : 'Información',
                buttons : Ext.MessageBox.OK,
                msg : 'Seleccione registro.',
                icon : Ext.Msg.INFO
            });

        }



    },

    onGridcolumnAfterRender11: function(component, eOpts) {

    }

});
