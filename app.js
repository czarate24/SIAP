/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

// @require @packageOverrides
Ext.Loader.setConfig({

});


Ext.application({
    models: [
        'PlazaModel',
        'GenerarModel',
        'ArticulosModel',
        'ComparativaModel',
        'SobrantesModel',
        'FaltantesModel',
        'LoginModel',
        'ConfigModel',
        'DatosModel',
        'InstitucionesModel',
        'BuscarInsModel',
        'CiclosEscolaresModel',
        'RolesModel',
        'FormasPagoModel',
        'CuotasInscripcionModel',
        'NivelesEducativosModel',
        'GradosModel',
        'CuotasColegiaturaModel',
        'CuotasTransporteModel',
        'PromocionesInsModel',
        'EstatusIngresosModel',
        'EstatusIngresoGridModel',
        'BancosModel',
        'FamiliasModel',
        'TutoresModel',
        'AlumnosModel',
        'DatosFactModel',
        'UsoCFDIModel',
        'cmbUsoCFDIModel',
        'UsoCFDIDfModel',
        'CarnetsInsModel',
        'CamionesAlumnosModel',
        'cmbTransporteModel',
        'MesesCiclo',
        'TransporteAlumnoModel',
        'TiposMovimientosModel',
        'cmbTipoMovimiento',
        'cmbMesesCiclo',
        'CorreoModel',
        'FamiliasFacModel',
        'cmbFormasPago',
        'BusAlumnoModel',
        'CobrosAlumnoModel',
        'cmbRFC',
        'CobrosColegiaturaModel',
        'CapturaCobrosModel',
        'CobrosCarnetModel',
        'CarnetsColModel',
        'CarnetsAlumnosModel',
        'ReferenciasModel',
        'FacturacionIngresosModel',
        'MesesAnualidadModel',
        'ImportesAnualidadModel',
        'AnualidadModel',
        'FacturacionAnualidadModel',
        'ParcialidadesModel',
        'MostrarParcialidadesModel',
        'CobrosAlumnoParcialidadModel',
        'CobrosCarnetParcialidadModel'
    ],
    stores: [
        'PlazasStore',
        'GenerarStore',
        'ArticulosStore',
        'ComparativaStore',
        'SobrantesStore',
        'SumStore',
        'FaltantesStore',
        'LoginStore',
        'ConfigStore',
        'DatosStore',
        'InstitucionesStore',
        'BuscarInsStore',
        'CiclosEscolaresStore',
        'RolesStore',
        'FormasPagoStore',
        'CuotasInscripcionStore',
        'NivelesEducativosStore',
        'GradosStore',
        'CuotasColegiaturaStore',
        'CuotasTransporteStore',
        'EstatusIngresosStore',
        'PromocionesInsStore',
        'EstatusIngresoGridStore',
        'BancosStore',
        'FamiliasStore',
        'TutoresStore',
        'AlumnosStore',
        'DatosFactStore',
        'UsoCFDIStore',
        'cmbUsoCFDIStore',
        'UsoCFDIDfStore',
        'CarnetsInsStore',
        'CamionesAlumnosStore',
        'cmbTransporteStore',
        'MesesCicloStore',
        'TransporteAlumnoStore',
        'TiposMovimientosStore',
        'cmbTipoMovimientoStore',
        'cmbMesesCicloStore',
        'CorreoStore',
        'FamiliasFacStore',
        'cmbFormasPago',
        'BusAlumnoStore',
        'CobrosAlumnoStore',
        'cmbRFCStore',
        'CobrosCarnetStore',
        'CobrosColegiaturaStore',
        'CapturaCobrosStore',
        'CarnetsColStore',
        'CarnetsAlumnosStore',
        'ReferenciasStore',
        'FacturacionIngresosStore',
        'cmbFormasPagoWin',
        'FacturacionIngresosInsStore',
        'FacturacionIngresosTransporteStore',
        'MesesAnualidadStore',
        'ImportesAnualidadStore',
        'AnualidadStore',
        'FacturacionAnualidadStore',
        'FacturacionAnualidadTransporteStore',
        'ParcialidadesStore',
        'MostrarParcialidadStore',
        'CobrosAlumnoParcialidadStore',
        'CobrosCarnetParcialidadStore'
    ],
    views: [
        'LoginWindows',
        'MainViewport',
        'NuevaPlazaWindow',
        'EditarPlazaWindow',
        'windowGenerar',
        'InstitucionesTab',
        'tabCap',
        'tabComp',
        'tabAjuste',
        'windowAjustes',
        'InstitucionesWin',
        'CiclosEscolaresTab',
        'RolesTab',
        'FormasPagoTab',
        'FormasPagoWin',
        'CuotasInscripcionTab',
        'CuotasInscripcionWin',
        'MyActionColumn1',
        'CuotasColegiaturaTab',
        'CuotasColegiaturaWin',
        'CuotasTransporteTab',
        'CuotasTransporteWin',
        'PromocionesInsWin',
        'EstatusIngresoTab',
        'EstatusIngresoWin',
        'BancosTab',
        'BancosWin',
        'DatosFactTab',
        'DatosFactWin',
        'UsoCFDITab',
        'UsoCFDIWin',
        'CarnetsInsTab',
        'CamionTab',
        'AsigCamionWin',
        'ModAsigCamionWin',
        'TiposMovimientosTab',
        'TiposMovimientosWin',
        'CorreoColWin',
        'CapturaCobrosTab',
        'AlumnosTab',
        'CapturaCobrosWin',
        'CarnetsInsWin',
        'CarnetsColTab',
        'CorreoInsWin',
        'ReferenciasTab',
        'ReferenciasWin',
        'AnualidadesTab',
        'AnualidadesWin',
        'AlumnosAnualidadTab',
        'ParcialidadesTab',
        'ParcialidadesWin',
        'AlumnosParcialidadTab'
    ],
    name: 'cartera',

    init: function() {
                // quitar cargando con ExtJS
                var cargando = Ext.get('cargando');
                if (cargando) {
                    cargando.destroy();
                }

                // Separador de decimales == '.'
                // Separador de miles == ','
                if (Ext.util && Ext.util.Format) {
                    Ext.apply(Ext.util.Format, {
                        thousandSeparator: ",",
                        decimalSeparator: "."
                    });
                }

                // Deshabilita los warnings de ARIA
                Ext.ariaWarn = Ext.emptyFn;

                /**
                 Namespace para guardar todas las variables globales
                 * Es mejor usar las variables globales de la forma:
                 *
                 * Ext._.usuario = {};     en vez de     Ext._usuario = {};
                 *
                 * Esto para tener un mejor control sobre estas variables a lo largo de la programacion
                 * ya que se podran acceder a todas las globales guardadas simplemente accediendo de la
                 * forma:
                 *
                 * Ext._
                 */
                Ext._ = {};
    },

    launch: function() {
        Ext.create('cartera.view.MainViewport');
    }

});
